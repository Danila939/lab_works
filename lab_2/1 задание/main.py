"""Найти все собственные значения действительной симметричной трехдиагональной
матрицы размером N x N (N = 1000) с использованием tig или eigh. Главная
диагональ заполнить последовательно чередующимися числами 5.0 и 2.0. Наддиагональ
и поддиагональ заполнить единицами. Построить график гистограммы распределения
собственных значений матрицы с постоянным шагом h без использования функций для
создания гистограмм из matplotlib.pyplot (типа hist).

Выполнил Башлыков Данила, 4 курс 5 группа
"""




import numpy as np
import matplotlib.pyplot as plt

n = 10
A = np.zeros((n,n))

for i in range(n-1): #формирование матрицы Якоби
    if i % 2 == 0:
        A[i][i] = 5
    else:
        A[i][i] = 2

    A[i+1][i] = 1
    A[i][i+1] = 1

if A[n-2][n-2] == 5:
    A[n-1][n-1] = 2
else:
    A[n-1][n-1] = 5

print("Матрица Якоби:")
print(A, "\n")

L, v = np.linalg.eig(A) #функция выявления собственных значений
print("Собственные значения матрицы A: \n")
print(L, "\n")                # и собственных векторов матрицы


h = 0.5  # выбор шага h
z = int(n/h)
x = np.empty(z, dtype = float)
y = np.empty(z, dtype = float)   # формирование массивов x и y, по которым построим гистрограмму
x[0] = y[0] = 0
prev = x[0]

k = 0

for i in range(1,z):  # заполнение массивов x и y
    x[i] = i * h
    for j in range(n):
        if L[j] <= x[i] and L[j] >= prev:
            k+=1
    y[i] = k
    prev = x[i]
    k = 0
    plt.vlines(x[i-1], y[i-1], y[i])
    plt.hlines(y[i], x[i-1], x[i])




print("Значения на оси абсцисс:\n",x, "\n")
print("Значения на оси ординат:\n",y, "\n")

#plt.bar(x,y)
plt.show()



